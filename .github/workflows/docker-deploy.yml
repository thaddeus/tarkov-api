#
name: Publish API via Docker

on:
  push:
    branches:
      - ssh-deploy

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3.2.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6.3.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
      
  deploy:
    needs: build-image
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup SSH Key
        run: |
          mkdir -p /home/runner/.ssh
          ssh-keyscan ${{ secrets.SSH_HOST }} >> /home/runner/.ssh/known_hosts
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > /home/runner/.ssh/api-server-key
          chmod 600 /home/runner/.ssh/api-server-key
          eval $(ssh-agent)
          ssh-add /home/runner/.ssh/api-server-key

      - name: Deploy via SSH
        run: |
          echo "Deploying via SSH"
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "sudo docker rm -f tarkov-api || true"
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "sudo docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}:ssh-deploy"
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "sudo docker run -d --name tarkov-api -p 80:8088 -e CLOUDFLARE_TOKEN='${{ secrets.CLOUDFLARE_TOKEN }}' -e CACHE_BASIC_AUTH='${{ secrets.CACHE_BASIC_AUTH }}' ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}:ssh-deploy"
